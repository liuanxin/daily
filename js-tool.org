
#+BEGIN_SRC js
var EMPTY = "";
var SPACE = " ";
var NULL = "null";
var UNDEFINED = "undefined";

if (!String.prototype.trim) {
    String.prototype.trim = function () {
        return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
    };
}
/* "{0} is bad, use {1}! {0} {2}".format("jsp", "xxx") ==> jsp is bad, use xxx! jsp {2} */
if (!String.prototype.format) {
    String.prototype.format = function () {
        var args = arguments;
        return this.replace(/{(\d+)}/g, function (match, number) {
            return typeof args[number] !== UNDEFINED ? args[number] : match;
        });
    };
}

/** 为空则返回 true */
function isBlank(str) {
    if (str === null || str === undefined) {
        return true;
    }
    var tmp = String(str).trim().toLowerCase();
    return EMPTY === tmp || NULL === tmp || UNDEFINED === tmp;
}
/** 不为空则返回 true */
function isNotBlank(str) {
    return !isBlank(str);
}

/** 转换成整数, 失败则转换成 0 */
function toInt(str) {
    return isBlank(str) || isNaN(str) ? 0 : parseInt(str, 10);
}
/** 转换成浮点数, 失败则转换成 0 */
function toFloat(str) {
    return isBlank(str) || isNaN(str) ? 0 : parseFloat(str);
}
/** 传入的值大于 0 就返回 true */
function greater0(str) {
    return toFloat(str) > 0;
}
/** 传入的值小于等于 0 就返回 true */
function less0(str) {
    return toFloat(str) <= 0;
}
/** 将字符串中指定位数的值模糊成 * 并返回. 索引位从 0 开始 */
function foggy(str, start, end) {
    if (isBlank(str)) {
        return EMPTY;
    }
    var s = toInt(start);
    var e = toInt(end);
    if (s < 0 || e < s || e > str.length) {
        return str;
    }
    return str.substring(0, s) + str.substring(s, e).replace(/./g, "*") + str.substring(e);
}
/** 是手机号就返回 true */
function checkPhone(str) {
    return isNotBlank(str) && /^1[0-9]{10}$/.test(str);
}
/** 是邮件就返回 true */
function checkEmail(str) {
    return isNotBlank(str) && /^\w[\w\-]*@([\w\-]+\.\w+)+$/.test(str);
}
/** 是图片就返回 true */
function checkImage(str) {
    return isNotBlank(str) && /\.(gif|jpeg|jpg|bmp|png)$/i.test(str);
}
/** 有中文就返回 true */
function checkChinese(str) {
    return isNotBlank(str) && /[\u4e00-\u9fa5]/.test(str);
}
/** 将 url 进行编码 */
function encode(url) {
    return isBlank(url) ? EMPTY : encodeURIComponent(url);
}
/** 将 url 进行解码 */
function decode(url) {
    return isBlank(url) ? EMPTY : decodeURIComponent(url);
}

/** 在 url 后面拼接 ? 或 & */
function appendUrl(url) {
    return isBlank(url) ? EMPTY : (url + (url.includes("?") ? "&" : "?"));
}
/** 在 path 前面加 / 返回 */
function addPrefix(path) {
    if (isBlank(path)) return "/";
    if (path.startsWith("/")) { return path; }
    return "/" + path;
}
/** 在 path 后面加 / 返回 */
function addSuffix(path) {
    if (isBlank(path)) return "/";
    if (path.endsWith("/")) { return path; }
    return path + "/";
}

/** 用两个空格来格式化 json */
function formatJson(json) {
    if (isBlank(json)) {
        return EMPTY;
    }
    try {
        return JSON.stringify(JSON.parse(json), null, "  ");
    } catch (e) {
        return json;
    }
}

/** 返回文件后缀 */
function getSuffix(fileName) {
    return isNotBlank(fileName) && fileName.includes(".") ? fileName.substring(fileName.lastIndexOf(".")) : EMPTY;
}

function uuid() {
    var now = new Date().getTime();
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (now + Math.random() * 16) % 16 | 0;
        now = Math.floor(now / 16);
        return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);
    });
}
/** 将传入的文件名重命名成一个 uuid 的名字 */
function renameFile(fileName) {
    return isBlank(fileName) ? EMPTY : (uuid() + getSuffix(fileName));
}
/** 生成指定个数的随机数 */
function randomNum(len) {
    if (toInt(len) <= 0) {
        return EMPTY;
    }
    var returnStr = EMPTY;
    var i;
    for (i = 0; i < len; i++) {
        returnStr += String(Math.round(Math.random() * 10));
    }
    return returnStr;
}
/** 生成指定个数的随机字母 */
function randomLetter(len) {
    if (toInt(len) <= 0) {
        return EMPTY;
    }
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

    var returnStr = EMPTY;
    var i;
    for (i = 0; i < len; i++) {
        returnStr += possible.charAt(Math.floor(Math.random() * possible.length));
    }
    return returnStr;
}

/** 将 html 代码进行转义 */
function escapeHtml(html) {
    if (isBlank(html)) {
        return null;
    }
    return html.replace(/&/g, "&amp;")
        .replace(/</g, "&lt;").replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;").replace(/'/g, "&#039;");
}

/** 将时间戳格式化到毫秒 */
function formatDate(date) {
    if (date === undefined || date === null || date === 'undefined' || date === 'null' || date === '') {
        return '';
    }
    var d;
    if (date instanceof Date) {
        d = date;
    } else if (typeof date === 'number') {
        d = new Date(date);
    } else {
        return date;
    }

    var y = d.getFullYear().toString();
    var m = (d.getMonth() + 1).toString();
    if (m.length === 1) {
        m = '0' + m;
    }
    var dy = d.getDate().toString();
    if (dy.length === 1) {
        dy = '0' + dy;
    }
    var h = d.getHours().toString();
    if (h.length === 1) {
        h = '0' + h;
    }
    var mt = d.getMinutes().toString();
    if (mt.length === 1) {
        mt = '0' + mt;
    }
    var s = d.getSeconds().toString();
    if (s.length === 1) {
        s = '0' + s;
    }
    var S = d.getMilliseconds().toString();
    if (S.length === 1) {
        S = '00' + S;
    } else if (S.length === 2) {
        S = '0' + S;
    }
    return y + "-" + m + "-" + dy + " " + h + ":" + mt + ":" + s + " " + S;
}

/** 分显示成元 */
function cent2Yuan(cent) {
    if (isBlank(cent)) {
        return '';
    }
    var v = (typeof cent);
    var m;
    if (v === 'number') {
        m = String(cent);
    } else if (v === 'string') {
        m = String(Number.parseInt(cent));
    } else {
        return '';
    }
    var len = m.length;
    return (len < 2) ? ('0.' + m) : (m.substring(0, len - 2) + '.' + m.substring(len - 2));
}
/** 将数字转换成千分位, 如 12345678.123 返回 12,345,678.123 */
function thousands(num) {
    if (isNaN(num)) {
        return num;
    }
    var number = (typeof num === 'number') ? num.toString() : num;
    var first,second;
    if (number.includes('.')) {
        var p = number.indexOf('.');
        first = number.substring(0, p);
        second = number.substring(p);
    } else {
        first = number;
        second = '';
    }
    return first.replace(/(\d)(?=(?:\d{3})+$)/g, '$1,') + second;
}
#+END_SRC
