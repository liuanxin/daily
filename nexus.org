去 https://issues.sonatype.org 注册账号并提交一个 issue(以自己的域名为 groupId, 没有可以使用 github 地址). 

#+BEGIN_EXAMPLE
summary 项目概要
description 详细说明
Group Id 最主要的信息, 这个有问题将会无法通过审核
两个 url 可以用 github 地址, 这个是必需但是并不那么重要
#+END_EXAMPLE

等待后台人员审核(主要是域名是否归属于你), 通过后就可以发布项目了. 此时可以去 https://oss.sonatype.org 登录

在本地生成一个公钥
#+BEGIN_SRC conf
gpg --gen-key
# 真实姓名(要有五个字符) + 邮箱 + O(字母 o, 不是数字 0).
# 还需要设置一个最少 8 位的密码. 最终会生成一个 pub 公钥(40 位)
# 而后会生成一个密钥一个公钥
#   gpg: 密钥 xxxxx 被标记为绝对信任
#   gpg: revocation certificate stored as '~/.gnupg/openpgp-revocs.d/公钥.rev'

# 使用 gpg --list-key 可以查看(目录 ~/.gnupg/openpgp-revocs.d, 命令 <gpg --delete-keys 公钥> 删除公钥)

# 用公钥把生成的密钥发布到公网上(后面的 close 在操作 Signature Validation 时会验证).
gpg --keyserver hkp://pool.sks-keyservers.net --send-keys 上面生成的公钥

# http://pgp.mit.edu:11371
# http://keyserver.ubuntu.com:11371
# http://pool.sks-keyservers.net:11371

# hkp://p80.pool.sks-keyservers.net:80
# hkp://ipv4.pool.sks-keyservers.net
# hkp://pgp.mit.edu:80
#+END_SRC

在项目中使用 oss 做为 parent, 如果不指定, 则需要在 pom 中添加 distributionManagement
#+BEGIN_SRC xml
<parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>9</version>
</parent>
#+END_SRC

-----

在本地 ~.m2/settings.xml~ 中添加
#+BEGIN_SRC xml
<servers>
    <server>
        <id>sonatype-nexus-snapshots</id>
        <username><![CDATA[上面注册的 nexus 的账号]]></username>
        <password><![CDATA[上面注册的 nexus 的密码]]></password>
    </server>
    <server>
        <id>sonatype-nexus-staging</id>
        <username><![CDATA[上面注册的 nexus 的账号]]></username>
        <password><![CDATA[上面注册的 nexus 的密码]]></password>
    </server>
</servers>
#+END_SRC

如果不想把明文密码直接写在文件中, 可以使用下面的方式
1. 运行命令 ~mvn --encrypt-master-password xxx~, 其中 xxx 表示主密码, 可以随机. 将会输出一串字符, 像这样: ~{+wrXG1tIt0sHPzS6058dBcUma8pGIfZnOODe9pOYWOc=}~ 将其写到 ~/.m2/settings-security.xml 文件中去
#+BEGIN_SRC xml
<settingsSecurity>
    <master>{+wrXG1tIt0sHPzS6058dBcUma8pGIfZnOODe9pOYWOc=}</master>
</settingsSecurity>
#+END_SRC
2. 运行 ~mvn --encrypt-password PASSWORD~, 其中 ~PASSWORD~ 表示在服务器中的密码, 将会输出一串字符, 像这样: ~{b+k2hQKQ760HCkhtjGBXh9UhgQ+IlCsd1UmxTPvrMU0=}~, 将其写到 ~/.m2/settings.xml 文件中去
#+BEGIN_SRC xml
<server>
    <id>company-nexus</id>
    <username>admin</username>
    <!-- <password><![CDATA[明文密码]]></password> -->
    <password>{b+k2hQKQ760HCkhtjGBXh9UhgQ+IlCsd1UmxTPvrMU0=}</password>
</server>
#+END_SRC

见: ~https://maven.apache.org/guides/mini/guide-encryption.html~
-----

发布包到中央仓库. ~source:jar javadoc:jar~ 是指发布的时候顺带将源码和 doc 也传上去
#+BEGIN_SRC conf
mvn -DskipTests clean source:jar javadoc:jar deploy -P sonatype-oss-release -Dgpg.passphrase=上面生成的公钥
#+END_SRC
输入上面设置好的 8 位密码, 将会把项目提交到公网做准备.

登录 https://oss.sonatype.org, 打开 staging repositories 选项卡, 找到自己的项目.\\
close 再 release(有错误将会无法关闭和发布, 注意看错误信息并处理).

等待一段时间(一般一到两小时), 将会更新到公网. 时不时去 http://search.maven.org 搜索看有没有更新过去就行了
